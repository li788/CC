void myprint(vector< vector<int>>& p)
{
    for (vector< vector<int>>::iterator it = p.begin(); it != p.end(); it++)
        //it,拿到第一层的地址，
    {
        for (vector<int>::iterator vit = (*it).begin(); vit != (*it).end(); vit++)
        {
            //vit是第二层的地址；
            cout << *vit << "   ";
        }
        cout << endl;
    }


}
void test01()
{
    vector< vector<int>>p;
    //初始化内层数据
    vector<int>n1;
    vector<int>n2;
    vector<int>n3;
    for (int i = 0; i < 5; i++) {
        n1.push_back(i);
        n2.push_back(i+1);
        n3.push_back(i + 2);
    }
    //整个列放入一个容器；
    p.push_back(n1);
    p.push_back(n2);
    p.push_back(n3);
    myprint(p);
}
int main()
{
    test01();
    system("pause");
    return 0;
}